package app.wangzc.challenge.views;

import app.wangzc.challenge.controllers.conf.Constant;
import app.wangzc.challenge.models.ScoreModel;
import app.wangzc.challenge.models.TaskModel;
import app.wangzc.challenge.models.TimeModel;

import javax.swing.*;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import java.awt.*;
import java.awt.event.*;

/**
 * 任务查看界面
 *
 * @author WangZC
 */
public class SelfChallengeJFrame extends javax.swing.JFrame {
	
	public static SelfChallengeJFrame selfChallengeJFrame = new SelfChallengeJFrame();
	
	public static SelfChallengeJFrame getInstance() {
		return selfChallengeJFrame;
	}
	
	/**
	 * Creates new form SelfChallengeJFrame
	 */
	public SelfChallengeJFrame() {
		Loading.getInstance().dispose();
		initComponents();
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		
		setTitle(Constant.getMotto());
		
		trayIcon.setImageAutoSize(true);
		try {
			systemTray.add(trayIcon);
		} catch (AWTException e) {
			e.printStackTrace();
		}
		
		popupMenu = new javax.swing.JPopupMenu();
		JMenuItem doneItem = new JMenuItem("完成");
		doneItem.setFont(new java.awt.Font("华文行楷", 0, 24));
		JMenuItem dropItem = new JMenuItem("放弃");
		dropItem.setFont(new java.awt.Font("华文行楷", 0, 24));
		popupMenu.add(doneItem);
		popupMenu.add(dropItem);
		
		doneItem.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {        // 传入 setup_time
				TaskModel.updateTaskStatus(objects[taskTable.getSelectedRow()][5].toString(), "已完成", objects[taskTable.getSelectedRow()][0].toString());
				refresh();
			}
		});
		
		dropItem.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				TaskModel.updateTaskStatus(objects[taskTable.getSelectedRow()][5].toString(), "放弃", objects[taskTable.getSelectedRow()][0].toString());
				refresh();
			}
		});
		
		lastWeekScore = new javax.swing.JLabel();
		thisWeekScore = new javax.swing.JLabel();
		todayScore = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		taskTable = new javax.swing.JTable();
		add = new javax.swing.JButton();
		totalScore = new javax.swing.JLabel();
		
		setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		
		lastWeekScore.setFont(new java.awt.Font("华文行楷", 0, 18)); // NOI18N
		lastWeekScore.setText("上周积分 : " + TimeModel.getLastWeekScore());
		
		thisWeekScore.setFont(new java.awt.Font("华文行楷", 0, 18)); // NOI18N
		thisWeekScore.setText("本周积分 : " + TimeModel.getThisWeekScore());
		
		todayScore.setFont(new java.awt.Font("华文行楷", 0, 24)); // NOI18N
		todayScore.setText("今日积分 : " + ScoreModel.queryToday());
		
		taskTable.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
		refresh();
		taskTable.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				taskTableMousePressed(evt);
			}
		});
		taskTable.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				taskTableMousePressed(evt);
			}
		});
		jScrollPane1.setViewportView(taskTable);
		
		add.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
		add.setText("+");
		add.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addActionPerformed(evt);
			}
		});
		
		totalScore.setFont(new java.awt.Font("华文行楷", 0, 18)); // NOI18N
		totalScore.setText("历史积分 : " + ScoreModel.queryHistory());
		
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addGroup(layout.createSequentialGroup()
												.addGap(390, 390, 390)
												.addComponent(todayScore, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(300, 300, 300)
												.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(lastWeekScore, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addGroup(layout.createSequentialGroup()
																.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																		.addComponent(thisWeekScore, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addComponent(totalScore, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																.addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
										.addGroup(layout.createSequentialGroup()
												.addGap(45, 45, 45)
												.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1391, javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addGap(45, 45, 45))
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addContainerGap(34, Short.MAX_VALUE)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addComponent(todayScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
												.addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(layout.createSequentialGroup()
														.addComponent(lastWeekScore)
														.addGap(18, 18, 18)
														.addComponent(thisWeekScore)
														.addGap(18, 18, 18)
														.addComponent(totalScore))))
								.addGap(28, 28, 28)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(24, 24, 24))
		);
		
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				super.windowClosing(e);
				thisWindow = false;
				MenuJFrame.getInstance().setVisible(true);
			}
		});
		
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowActivated(WindowEvent e) {
				super.windowActivated(e);
				thisWindow = true;
				refresh();
			}
		});
		
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowIconified(WindowEvent e) {
				super.windowIconified(e);
				dispose();
			}
		});
		
		trayIcon.addMouseListener(
				new MouseAdapter() {
					public void mouseClicked(MouseEvent e) {
						if ((e.getModifiers() & InputEvent.BUTTON1_MASK) != 0) {   //右击托盘窗口再现
//						if (e.getClickCount() == 1) {   //单击托盘窗口再现
							if (thisWindow)
								setVisible(true);
							else
								MenuJFrame.getInstance().setVisible(true);
//							setExtendedState(Frame.NORMAL);
//							setVisible(true);
						}
					}
				}
		);
		
		pack();
		
		setLocationRelativeTo(null);
		setResizable(false);
		
	}// </editor-fold>
	
	private void showPopup(java.awt.event.MouseEvent evt) {
		if (taskTable.getSelectedRow() != -1)
			popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
	}
	
	private void taskTableMousePressed(java.awt.event.MouseEvent evt) {
		// TODO add your handling code here:
		if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) != 0) {
			showPopup(evt);
		}
	}
	
	private void addActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		AddTaskJFrame.getInstance().setVisible(true);
		dispose();
	}
	
	public void refresh() {
		this.setEnabled(false);
		objects = TaskModel.getTask();
		taskTable.setModel(new javax.swing.table.DefaultTableModel(
				objects,
				new String[]{
						"分值", "类型", "发布时间", "任务详情"
				}
		) {
			@Override
			public boolean isCellEditable(int row, int column) {
				return column != 1 && column != 2;
			}
		});
		taskTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		taskTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		taskTable.setRowHeight(30);
		taskTable.getColumnModel().getColumn(0).setPreferredWidth(50);
		taskTable.getColumnModel().getColumn(1).setPreferredWidth(120);
		taskTable.getColumnModel().getColumn(2).setPreferredWidth(210);
		taskTable.getColumnModel().getColumn(3).setPreferredWidth(990);
		
		// 更新积分面板
		TimeModel.calcThisWeekScore();
		todayScore.setText("今日积分 : " + ScoreModel.queryToday());
		totalScore.setText("库存积分 : " + ScoreModel.queryHistory());
		thisWeekScore.setText("本周积分 : " + TimeModel.getThisWeekScore());
		
		taskTable.getModel().addTableModelListener(new TableModelListener() {
			@Override
			public void tableChanged(TableModelEvent e) {
				String content = taskTable.getModel().getValueAt(e.getFirstRow(), 3).toString();
				String score = taskTable.getModel().getValueAt(e.getFirstRow(), 0).toString();
				if (!objects[e.getFirstRow()][3].toString().equals(content) || !objects[e.getFirstRow()][0].toString().equals(score))
					TaskModel.updateTaskContent(objects[e.getFirstRow()][5].toString(), content, score);
//				System.out.println(objects[e.getFirstRow()][5].toString());
//				System.out.println("Column: " + e.getColumn() + " Row: " + e.getFirstRow());
//				System.out.println(taskTable.getModel().getValueAt(e.getFirstRow(), 0));
//				System.out.println(taskTable.getModel().getValueAt(e.getFirstRow(), 3));
			}
		});
		
		this.setEnabled(true);
	}
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Windows".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(SelfChallengeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(SelfChallengeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(SelfChallengeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(SelfChallengeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new SelfChallengeJFrame().setVisible(true);
			}
		});
	}
	
	// Variables declaration - do not modify
	private javax.swing.JButton add;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel lastWeekScore;
	private javax.swing.JPopupMenu popupMenu;
	private javax.swing.JTable taskTable;
	private javax.swing.JLabel thisWeekScore;
	private javax.swing.JLabel todayScore;
	private javax.swing.JLabel totalScore;
	// End of variables declaration
	private Object[][] objects;
	private TrayIcon trayIcon = new TrayIcon(new ImageIcon(Constant.class.getResource(Constant.lib_dir + "images/wolf.jpg")).getImage());   //托盘图标
	private SystemTray systemTray = SystemTray.getSystemTray();         //系统托盘
	private boolean thisWindow = true;
}
