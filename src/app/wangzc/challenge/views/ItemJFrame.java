package app.wangzc.challenge.views;

import app.wangzc.challenge.models.AwardModel;
import app.wangzc.challenge.models.ScoreModel;

import javax.swing.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/**
 * The JFrame for exchanging awards
 *
 * @author WangZC
 */
public class ItemJFrame extends javax.swing.JFrame {

	public static ItemJFrame itemJFrame = new ItemJFrame();

	public static ItemJFrame getInstance() {
		return itemJFrame;
	}

	/**
	 * Creates new form ItemJFrame
	 */
	public ItemJFrame() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		setTitle("积分兑换");

		label = new javax.swing.JLabel();
		scoreLabel = new javax.swing.JLabel();
		exchange = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		awardTable = new javax.swing.JTable();

		setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

		label.setFont(new java.awt.Font("华文行楷", 0, 36)); // NOI18N
		label.setText("积分兑换");

		scoreLabel.setFont(new java.awt.Font("华文行楷", 0, 18)); // NOI18N
		scoreLabel.setText("拥有积分 ：" + ScoreModel.queryHistory());

		exchange.setFont(new java.awt.Font("华文行楷", 0, 24)); // NOI18N
		exchange.setText("兑换");
		exchange.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				exchangeActionPerformed(evt);
			}
		});

		awardTable.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
		refresh();
		awardTable.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				awardTableMousePressed(evt);
			}
		});
		jScrollPane1.setViewportView(awardTable);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addGap(47, 47, 47)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addGroup(layout.createSequentialGroup()
												.addComponent(label)
												.addGap(297, 297, 297)
												.addComponent(scoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(84, 84, 84)
												.addComponent(exchange, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
										.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addContainerGap(53, Short.MAX_VALUE))
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addGap(68, 68, 68)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(label)
										.addComponent(scoreLabel)
										.addComponent(exchange, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(36, 36, 36))
		);

		addWindowListener(new WindowAdapter() {
			@Override
			public void windowActivated(WindowEvent e) {
				super.windowActivated(e);
				refresh();
				if (index != -1)
					try {
						awardTable.setRowSelectionInterval(index, index);
					} catch (Exception e1) {
						index = -1;
					}
			}
		});

		addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				super.windowClosing(e);
				index = -1;
			}
		});

		pack();

		setLocationRelativeTo(null);
		setResizable(false);
	}// </editor-fold>

	public void refresh() {
		this.setEnabled(false);
		scoreLabel.setText("拥有积分 ：" + ScoreModel.queryHistory());
		objects = AwardModel.queryAward();
		awardTable.setModel(new javax.swing.table.DefaultTableModel(
				objects,
				new String[]{
						"价值", "项目", "已拥有"
				}
		) {
			@Override
			public boolean isCellEditable(int row, int column) {
				return false;
			}
		});
		awardTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		awardTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		awardTable.setRowHeight(30);
		awardTable.getColumnModel().getColumn(0).setPreferredWidth(80);
		awardTable.getColumnModel().getColumn(1).setPreferredWidth(630);
		awardTable.getColumnModel().getColumn(2).setPreferredWidth(70);
		this.setEnabled(true);
	}

	private void awardTableMousePressed(java.awt.event.MouseEvent evt) {
		// TODO add your handling code here:
		index = awardTable.getSelectedRow();
	}

	private void exchangeActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		if (awardTable.getSelectedRow() != -1) {
			AwardModel.exchange(Integer.parseInt(objects[awardTable.getSelectedRow()][0].toString()), objects[awardTable.getSelectedRow()][1].toString(), Integer.parseInt(objects[awardTable.getSelectedRow()][2].toString()));
			refresh();
//			scoreLabel.setText("拥有积分 ：" + ScoreModel.queryHistory());
			awardTable.setRowSelectionInterval(index, index);
		}
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
	    /* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Windows".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ItemJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ItemJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ItemJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ItemJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

        /* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ItemJFrame().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JTable awardTable;
	private javax.swing.JButton exchange;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel label;
	private javax.swing.JLabel scoreLabel;
	// End of variables declaration
	private Object[][] objects;
	private int index = -1;
}

